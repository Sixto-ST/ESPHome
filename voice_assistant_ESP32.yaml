esphome:
  name: gustavo
  friendly_name: Gustavo

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxx"

ota:
  password: "xxxxxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

   # Optional manual IP
  manual_ip:
    static_ip: 192.168.0.15
    gateway: 192.168.0.1
    subnet: 255.255.255.0
    dns1: 192.168.0.50

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Gustavo Fallback Hotspot"
    password: !secret ap_password

captive_portal:

web_server:
  port: 80

# Example configuration entry

i2s_audio:
  i2s_lrclk_pin: GPIO33
  i2s_bclk_pin: GPIO19

microphone:
  - platform: i2s_audio
    id: mic
    adc_type: external
    i2s_din_pin: GPIO27
    pdm: false



voice_assistant:
  microphone: mic
  use_wake_word: true
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  media_player: big_speaker
  id: assist


media_player:
  - platform: i2s_audio
    id: big_speaker
    name: ESP32 Media Player
    #dac_type: internal
    dac_type: external
    i2s_dout_pin: GPIO22
    mode: stereo
    on_pause:
      - media_player.stop

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(assist).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(assist).set_use_wake_word(false);

#external_components:
#  - source:
#      type: git
#      url: https://github.com/h3ndrik/esphome
#      ref: update_audioi2s
#    refresh: 0s
#    components: [ i2s_audio, media_player ]

