esphome:
  name: lector-rfid-y-teclado-esp32
  friendly_name: Lector RFID y teclado ESP32

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG 
  logs:
    switch: INFO
    matrix_keypad: INFO

# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxx"

ota:
  password: "xxxxxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lector-Rfid-Y-Teclado-Esp32"
    password: "!secret ap_password"

captive_portal:

web_server:
  port: 80    

# Estado del dispositivo (LED)
status_led:
  pin: GPIO2  #GPIO2 es un led AZUL en la placa

spi:
  clk_pin: GPIO14 # SCK on this board
  mosi_pin: GPIO13 # MOSI (misspelt MOIS)
  miso_pin: GPIO12 # MISO

rc522_spi:
  cs_pin: GPIO15 # SDA on this board I reckon (no idea why -- I suspect they just change a jumper for I2C board)
  reset_pin: GPIO16 # RST
  on_tag:
    then:
      - switch.turn_on: led_lectura_ok
      - delay: 300ms
      - switch.turn_off: led_lectura_ok
      - homeassistant.tag_scanned: !lambda 'return x;'

# Configuración del teclado
matrix_keypad:
  id: teclado
  rows:
    - pin: GPIO27 #Fila 0 (123A)
    - pin: GPIO26  #Fila 1 (456B)
    - pin: GPIO25  #Fila 2 (789C)
    - pin: GPIO33  #Fila 3 (*0#D)
  columns:   #No utilizar GPIO34 a GPIO39 para teclados, da errores y se jode todo
    - pin: GPIO5 #Columna 0 (147*)
    - pin: GPIO18 #Columna 1 (2580)
    - pin: GPIO19 #Columna 2 (369#)
    - pin: GPIO21 #Columna 3 (ABCD)
    
  keys: "123A456B789C*0#D"
  has_diodes: false

# Configuración del tecleado
key_collector:
  - source_id: teclado
    min_length: 4
    max_length: 6
    end_keys: "#,*"
    end_key_required: true
    allowed_keys: "0123456789ABCD"
    timeout: 5s
    on_progress:
      - logger.log:
          format: "input progress: '%s'"
          args: [ 'x.c_str()']
      - switch.turn_on: pitido_1
      - delay: 100ms
      - switch.turn_off: pitido_1
    on_result:
      - logger.log:
          format: "input result: '%s'"
          args: [ 'x.c_str()' ]
      - text_sensor.template.publish:
            id: codigo_tecleado
            state:  !lambda return x;
    on_timeout:
      - logger.log:
          format: "input timeout: '%s'"
          args: [ 'x.c_str()' ]
      - text_sensor.template.publish:
            id: codigo_tecleado
            state:  "TimedOut"
      - text_sensor.template.publish:
            id: registro
            state:  "Tiempo de espera superado"

# Estas son las salidas disponibles
switch:
  - platform: gpio
    pin:
      number: GPIO4
    name: "Relé"
    id: rele_1
    on_turn_on:
      - delay: 5s
      - switch.turn_off: rele_1
    #internal: true
  - platform: gpio
    pin:
      number: GPIO17
    name: "Pitido1"
    id: pitido_1
    internal: true
  - platform: gpio
    pin:
      number: GPIO1
    name: "Pitido2"
    id: pitido_2
    internal: true
  - platform: gpio
    pin: GPIO32
    id: led_lectura_ok
    internal: true

# Estado del módulo y sensor de puerta
binary_sensor:
  - platform: status
    name: "Estado"
  - platform: gpio
    pin:
      number: GPIO23
      mode:
        input: true
        pulldown: false #conectando a 3.3v. True o False según convenga.
        pullup: true #conectando a negativo. True o False según convenga.
    name: "Estado puerta"
    device_class: door

# Códigos introducidos
text_sensor:
  - platform: template
    name: Histórico
    id: registro
    lambda: |-
      return {"En espera"};
  - platform: template
    name: Código tecleado
    id: codigo_tecleado
    lambda: |-
      return {"------"};
    on_value:
      then:
        - if:
            condition:
              or:          
                ########   AQUÍ VAN LOS CÓDIGOS   ########
                - text_sensor.state:
                    id: codigo_tecleado
                    state: '1234'
                - text_sensor.state:
                    id: codigo_tecleado
                    state: '567890'
                #########################################
            then:
                - text_sensor.template.publish:
                    id: registro
                    state:  "Código aceptado"
                - delay: 110ms
                - switch.turn_on: rele_1
                - switch.turn_on: pitido_2
                - delay: 1s
                - switch.turn_off: pitido_2
            else:
              - if:
                  condition:
                    - text_sensor.state:
                        id: codigo_tecleado
                        state: '------' 
                  then:
                    - text_sensor.template.publish:
                        id: registro
                        state:  "En espera"
                  else:
                    - text_sensor.template.publish:
                        id: registro
                        state:  "Código erróneo detectado"
                    - delay: 110ms
                    - repeat:
                       count: 3
                       then:
                          - switch.turn_on: pitido_2
                          - delay: 500ms
                          - switch.turn_off: pitido_2
                          - delay: 500ms
